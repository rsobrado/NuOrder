{"ast":null,"code":"var _jsxFileName = \"/Users/labworxs-remote/Desktop/NuOrder/src/components/Issues.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  number: {\n    color: '#b1b1b1',\n    fontSize: 'small',\n    marginRight: 5\n  },\n  user: {\n    color: '#717171',\n    fontSize: 'small',\n    marginRight: 2\n  },\n  login: {\n    color: '#717171',\n    fontSize: 'small',\n    marginRight: 20,\n    fontWeight: 'bold'\n  }\n}));\nexport default function Issues(...props) {\n  const [issues, setIssues] = useState(props);\n  useEffect(() => {\n    async function loadData() {\n      const result = await axios('https://api.github.com/repos/facebook/react/issues?per_page=100&state=all');\n      setIssues(result.data);\n    }\n\n    loadData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, issues && issues.map((issue, index) => /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    role: \"checkbox\",\n    tabIndex: -1,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"#\", issue.number, \" \"), /*#__PURE__*/React.createElement(\"a\", {\n    href: issue.html_url,\n    target: \"_new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, issue.title)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Opened by: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, issue.user.login, \" \"), issue.labels && issue.labels.map((label, index) => /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      background: `#${label.color}`,\n      marginLeft: '5px',\n      fontSize: 'small',\n      borderRadius: 10,\n      padding: '2px 5px'\n    },\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, label.name)))))));\n}","map":{"version":3,"sources":["/Users/labworxs-remote/Desktop/NuOrder/src/components/Issues.js"],"names":["React","useState","useEffect","axios","TableCell","TableRow","makeStyles","useStyles","theme","number","color","fontSize","marginRight","user","login","fontWeight","Issues","props","issues","setIssues","loadData","result","data","map","issue","index","classes","html_url","title","labels","label","background","marginLeft","borderRadius","padding","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,SADD;AAENC,IAAAA,QAAQ,EAAE,OAFJ;AAGNC,IAAAA,WAAW,EAAE;AAHP,GAD+B;AAMvCC,EAAAA,IAAI,EAAE;AACJH,IAAAA,KAAK,EAAE,SADH;AAEJC,IAAAA,QAAQ,EAAE,OAFN;AAGJC,IAAAA,WAAW,EAAE;AAHT,GANiC;AAWvCE,EAAAA,KAAK,EAAE;AACLJ,IAAAA,KAAK,EAAE,SADF;AAELC,IAAAA,QAAQ,EAAE,OAFL;AAGLC,IAAAA,WAAW,EAAE,EAHR;AAILG,IAAAA,UAAU,EAAE;AAJP;AAXgC,CAAZ,CAAD,CAA5B;AAmBA,eAAe,SAASC,MAAT,CAAgB,GAAGC,KAAnB,EAA0B;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAACgB,KAAD,CAApC;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAekB,QAAf,GAA0B;AACxB,YAAMC,MAAM,GAAG,MAAMlB,KAAK,CACxB,2EADwB,CAA1B;AAGAgB,MAAAA,SAAS,CAACE,MAAM,CAACC,IAAR,CAAT;AACD;;AACDF,IAAAA,QAAQ;AACT,GARQ,EAQN,EARM,CAAT;AAUA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,IACLA,MAAM,CAACK,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACT,oBAAC,QAAD;AAAU,IAAA,KAAK,MAAf;AAAgB,IAAA,IAAI,EAAC,UAArB;AAAgC,IAAA,QAAQ,EAAE,CAAC,CAA3C;AAA8C,IAAA,GAAG,EAAEA,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAEC,OAAO,CAACjB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAmCe,KAAK,CAACf,MAAzC,MADF,eAEE;AAAG,IAAA,IAAI,EAAEe,KAAK,CAACG,QAAf;AAAyB,IAAA,MAAM,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,KADT,CAFF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAEF,OAAO,CAACb,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAM,IAAA,SAAS,EAAEa,OAAO,CAACZ,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCU,KAAK,CAACX,IAAN,CAAWC,KAA5C,MAFF,EAIGU,KAAK,CAACK,MAAN,IACCL,KAAK,CAACK,MAAN,CAAaN,GAAb,CAAiB,CAACO,KAAD,EAAQL,KAAR,kBACf;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,UAAU,EAAG,IAAGD,KAAK,CAACpB,KAAM,EADvB;AAELsB,MAAAA,UAAU,EAAE,KAFP;AAGLrB,MAAAA,QAAQ,EAAE,OAHL;AAILsB,MAAAA,YAAY,EAAE,EAJT;AAKLC,MAAAA,OAAO,EAAE;AALJ,KADT;AAQE,IAAA,GAAG,EAAET,KARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGK,KAAK,CAACK,IATT,CADF,CALJ,CAPF,CADF,CADF,CAFJ,CADF;AAqCD","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  number: {\n    color: '#b1b1b1',\n    fontSize: 'small',\n    marginRight: 5,\n  },\n  user: {\n    color: '#717171',\n    fontSize: 'small',\n    marginRight: 2,\n  },\n  login: {\n    color: '#717171',\n    fontSize: 'small',\n    marginRight: 20,\n    fontWeight: 'bold',\n  },\n}))\n\nexport default function Issues(...props) {\n  const [issues, setIssues] = useState(props)\n\n  useEffect(() => {\n    async function loadData() {\n      const result = await axios(\n        'https://api.github.com/repos/facebook/react/issues?per_page=100&state=all'\n      )\n      setIssues(result.data)\n    }\n    loadData()\n  }, [])\n\n  return (\n    <React.Fragment>\n      {issues &&\n        issues.map((issue, index) => (\n          <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n            <TableCell>\n              <h3>\n                <span className={classes.number}>#{issue.number} </span>\n                <a href={issue.html_url} target=\"_new\">\n                  {issue.title}\n                </a>\n              </h3>\n              <div>\n                <span className={classes.user}>Opened by: </span>\n                <span className={classes.login}>{issue.user.login} </span>\n\n                {issue.labels &&\n                  issue.labels.map((label, index) => (\n                    <span\n                      style={{\n                        background: `#${label.color}`,\n                        marginLeft: '5px',\n                        fontSize: 'small',\n                        borderRadius: 10,\n                        padding: '2px 5px',\n                      }}\n                      key={index}>\n                      {label.name}\n                    </span>\n                  ))}\n              </div>\n              {/* <span>{issue.body}</span> */}\n            </TableCell>\n          </TableRow>\n        ))}\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}